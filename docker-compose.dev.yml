version: '3.8'

services:
  dev-environment:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ..:/workspace:cached
      - vid-bench-models:/workspace/models
      - vid-bench-results:/workspace/results
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PYTHONPATH=/workspace/src
      - VID_BENCH_ENV=development
      - VID_BENCH_LOG_LEVEL=DEBUG
    ports:
      - "8501:8501"  # Streamlit
      - "8000:8000"  # API server
      - "8888:8888"  # Jupyter
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    command: sleep infinity
    
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: vid_bench
      POSTGRES_USER: vid_bench
      POSTGRES_PASSWORD: vid_bench_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning

volumes:
  vid-bench-models:
  vid-bench-results:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data: