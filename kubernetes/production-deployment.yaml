apiVersion: v1
kind: Namespace
metadata:
  name: vid-diffusion-bench
  labels:
    name: vid-diffusion-bench
    environment: production
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vid-diffusion-config
  namespace: vid-diffusion-bench
data:
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  WORKERS: "4"
  MAX_REQUESTS: "1000"
  TIMEOUT: "300"
  REDIS_URL: "redis://redis-service:6379"
  POSTGRES_HOST: "postgres-service"
  POSTGRES_DB: "vid_diffusion_bench"
---
apiVersion: v1
kind: Secret
metadata:
  name: vid-diffusion-secrets
  namespace: vid-diffusion-bench
type: Opaque
stringData:
  POSTGRES_PASSWORD: "your-secure-password"
  REDIS_PASSWORD: "your-redis-password"
  JWT_SECRET: "your-jwt-secret"
  API_KEY: "your-api-key"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vid-diffusion-bench-api
  namespace: vid-diffusion-bench
  labels:
    app: vid-diffusion-bench-api
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: vid-diffusion-bench-api
  template:
    metadata:
      labels:
        app: vid-diffusion-bench-api
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: vid-diffusion-bench-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: api
        image: vid-diffusion-bench:production
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: vid-diffusion-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: vid-diffusion-config
              key: LOG_LEVEL
        - name: WORKERS
          valueFrom:
            configMapKeyRef:
              name: vid-diffusion-config
              key: WORKERS
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: vid-diffusion-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: vid-diffusion-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: vid-diffusion-secrets
              key: JWT_SECRET
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
            nvidia.com/gpu: 0
          limits:
            cpu: 2000m
            memory: 4Gi
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: model-cache
          mountPath: /app/model_cache
        - name: data-volume
          mountPath: /app/data
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: model-cache-pvc
      - name: data-volume
        persistentVolumeClaim:
          claimName: data-pvc
      - name: logs-volume
        emptyDir: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-type
                operator: In
                values: ["gpu"]
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["vid-diffusion-bench-api"]
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
---
apiVersion: v1
kind: Service
metadata:
  name: vid-diffusion-bench-service
  namespace: vid-diffusion-bench
  labels:
    app: vid-diffusion-bench-api
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: metrics
  selector:
    app: vid-diffusion-bench-api
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vid-diffusion-bench-sa
  namespace: vid-diffusion-bench
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vid-diffusion-bench-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vid-diffusion-bench-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vid-diffusion-bench-role
subjects:
- kind: ServiceAccount
  name: vid-diffusion-bench-sa
  namespace: vid-diffusion-bench
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-cache-pvc
  namespace: vid-diffusion-bench
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: gp3
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
  namespace: vid-diffusion-bench
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: gp3
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vid-diffusion-bench-hpa
  namespace: vid-diffusion-bench
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vid-diffusion-bench-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: custom_queue_length
      target:
        type: AverageValue
        averageValue: "10"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: vid-diffusion-bench-pdb
  namespace: vid-diffusion-bench
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: vid-diffusion-bench-api
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: vid-diffusion-bench-netpol
  namespace: vid-diffusion-bench
spec:
  podSelector:
    matchLabels:
      app: vid-diffusion-bench-api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - namespaceSelector:
        matchLabels:
          name: cache
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: vid-diffusion-bench-monitor
  namespace: vid-diffusion-bench
  labels:
    app: vid-diffusion-bench-api
spec:
  selector:
    matchLabels:
      app: vid-diffusion-bench-api
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
    honorLabels: true