[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vid-diffusion-benchmark-suite"
version = "0.1.0"
description = "Unified test-bed for next-gen open-source video diffusion models"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Daniel Schmidt", email = "vid-bench@yourdomain.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Video",
]
requires-python = ">=3.10"
dependencies = [
    "torch>=2.3.0",
    "torchvision>=0.18.0",
    "diffusers>=0.27.0",
    "transformers>=4.40.0",
    "accelerate>=0.30.0",
    "opencv-python>=4.9.0",
    "scikit-video>=1.1.11",
    "pytorch-fid>=0.3.0",
    "lpips>=0.1.4",
    "streamlit>=1.35.0",
    "wandb>=0.16.0",
    "prometheus-client>=0.20.0",
    "redis>=5.0.0",
    "numpy",
    "pillow",
    "tqdm",
    "click",
    "pyyaml",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "ruff>=0.1.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.23.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/vid-diffusion-benchmark-suite"
Documentation = "https://vid-diffusion-bench.readthedocs.io"
Repository = "https://github.com/yourusername/vid-diffusion-benchmark-suite"
"Bug Tracker" = "https://github.com/yourusername/vid-diffusion-benchmark-suite/issues"

[project.scripts]
vid-bench = "vid_diffusion_bench.cli:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["vid_diffusion_bench*"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=vid_diffusion_bench",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/__init__.py",
    "*/tests/*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]