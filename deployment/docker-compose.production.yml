version: '3.8'

services:
  vid-diffusion-bench:
    build:
      context: ..
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: production
    image: vid-diffusion-bench:production
    container_name: vid-diffusion-bench-prod
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "8080:8080"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - BENCHMARK_WORKERS=4
      - CACHE_SIZE_MB=2048
      - DATABASE_URL=postgresql://benchmark_user:${DB_PASSWORD}@postgres:5432/benchmark_prod
      - REDIS_URL=redis://redis:6379/0
      - PROMETHEUS_ENABLED=true
      - GRAFANA_ENABLED=true
    volumes:
      - benchmark_data:/app/data
      - benchmark_cache:/app/cache
      - benchmark_logs:/app/logs
      - model_cache:/app/model_cache
    depends_on:
      - postgres
      - redis
    networks:
      - benchmark_network
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'
        reservations:
          memory: 4G
          cpus: '2.0'
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: benchmark-postgres-prod
    restart: unless-stopped
    environment:
      - POSTGRES_DB=benchmark_prod
      - POSTGRES_USER=benchmark_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - benchmark_network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U benchmark_user -d benchmark_prod"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: benchmark-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - benchmark_network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: benchmark-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - vid-diffusion-bench
    networks:
      - benchmark_network

  prometheus:
    image: prom/prometheus:latest
    container_name: benchmark-prometheus-prod
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - benchmark_network

  grafana:
    image: grafana/grafana:latest
    container_name: benchmark-grafana-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - benchmark_network

volumes:
  benchmark_data:
    driver: local
  benchmark_cache:
    driver: local
  benchmark_logs:
    driver: local
  model_cache:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  benchmark_network:
    driver: bridge